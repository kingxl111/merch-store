// Code generated by ogen, DO NOT EDIT.

package api

type APIAuthPostBadRequest ErrorResponse

func (*APIAuthPostBadRequest) aPIAuthPostRes() {}

type APIAuthPostInternalServerError ErrorResponse

func (*APIAuthPostInternalServerError) aPIAuthPostRes() {}

type APIAuthPostUnauthorized ErrorResponse

func (*APIAuthPostUnauthorized) aPIAuthPostRes() {}

type APIBuyItemGetBadRequest ErrorResponse

func (*APIBuyItemGetBadRequest) aPIBuyItemGetRes() {}

type APIBuyItemGetInternalServerError ErrorResponse

func (*APIBuyItemGetInternalServerError) aPIBuyItemGetRes() {}

// APIBuyItemGetOK is response for APIBuyItemGet operation.
type APIBuyItemGetOK struct{}

func (*APIBuyItemGetOK) aPIBuyItemGetRes() {}

type APIBuyItemGetUnauthorized ErrorResponse

func (*APIBuyItemGetUnauthorized) aPIBuyItemGetRes() {}

type APIInfoGetBadRequest ErrorResponse

func (*APIInfoGetBadRequest) aPIInfoGetRes() {}

type APIInfoGetInternalServerError ErrorResponse

func (*APIInfoGetInternalServerError) aPIInfoGetRes() {}

type APIInfoGetUnauthorized ErrorResponse

func (*APIInfoGetUnauthorized) aPIInfoGetRes() {}

type APISendCoinPostBadRequest ErrorResponse

func (*APISendCoinPostBadRequest) aPISendCoinPostRes() {}

type APISendCoinPostInternalServerError ErrorResponse

func (*APISendCoinPostInternalServerError) aPISendCoinPostRes() {}

// APISendCoinPostOK is response for APISendCoinPost operation.
type APISendCoinPostOK struct{}

func (*APISendCoinPostOK) aPISendCoinPostRes() {}

type APISendCoinPostUnauthorized ErrorResponse

func (*APISendCoinPostUnauthorized) aPISendCoinPostRes() {}

// Ref: #/components/schemas/AuthRequest
type AuthRequest struct {
	// Имя пользователя для аутентификации.
	Username string `json:"username"`
	// Пароль для аутентификации.
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *AuthRequest) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *AuthRequest) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *AuthRequest) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *AuthRequest) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/AuthResponse
type AuthResponse struct {
	// JWT-токен для доступа к защищенным ресурсам.
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *AuthResponse) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *AuthResponse) SetToken(val OptString) {
	s.Token = val
}

func (*AuthResponse) aPIAuthPostRes() {}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	// Сообщение об ошибке, описывающее проблему.
	Errors OptString `json:"errors"`
}

// GetErrors returns the value of Errors.
func (s *ErrorResponse) GetErrors() OptString {
	return s.Errors
}

// SetErrors sets the value of Errors.
func (s *ErrorResponse) SetErrors(val OptString) {
	s.Errors = val
}

// Ref: #/components/schemas/InfoResponse
type InfoResponse struct {
	// Количество доступных монет.
	Coins       OptInt                      `json:"coins"`
	Inventory   []InfoResponseInventoryItem `json:"inventory"`
	CoinHistory OptInfoResponseCoinHistory  `json:"coinHistory"`
}

// GetCoins returns the value of Coins.
func (s *InfoResponse) GetCoins() OptInt {
	return s.Coins
}

// GetInventory returns the value of Inventory.
func (s *InfoResponse) GetInventory() []InfoResponseInventoryItem {
	return s.Inventory
}

// GetCoinHistory returns the value of CoinHistory.
func (s *InfoResponse) GetCoinHistory() OptInfoResponseCoinHistory {
	return s.CoinHistory
}

// SetCoins sets the value of Coins.
func (s *InfoResponse) SetCoins(val OptInt) {
	s.Coins = val
}

// SetInventory sets the value of Inventory.
func (s *InfoResponse) SetInventory(val []InfoResponseInventoryItem) {
	s.Inventory = val
}

// SetCoinHistory sets the value of CoinHistory.
func (s *InfoResponse) SetCoinHistory(val OptInfoResponseCoinHistory) {
	s.CoinHistory = val
}

func (*InfoResponse) aPIInfoGetRes() {}

type InfoResponseCoinHistory struct {
	Received []InfoResponseCoinHistoryReceivedItem `json:"received"`
	Sent     []InfoResponseCoinHistorySentItem     `json:"sent"`
}

// GetReceived returns the value of Received.
func (s *InfoResponseCoinHistory) GetReceived() []InfoResponseCoinHistoryReceivedItem {
	return s.Received
}

// GetSent returns the value of Sent.
func (s *InfoResponseCoinHistory) GetSent() []InfoResponseCoinHistorySentItem {
	return s.Sent
}

// SetReceived sets the value of Received.
func (s *InfoResponseCoinHistory) SetReceived(val []InfoResponseCoinHistoryReceivedItem) {
	s.Received = val
}

// SetSent sets the value of Sent.
func (s *InfoResponseCoinHistory) SetSent(val []InfoResponseCoinHistorySentItem) {
	s.Sent = val
}

type InfoResponseCoinHistoryReceivedItem struct {
	// Имя пользователя, который отправил монеты.
	FromUser OptString `json:"fromUser"`
	// Количество полученных монет.
	Amount OptInt `json:"amount"`
}

// GetFromUser returns the value of FromUser.
func (s *InfoResponseCoinHistoryReceivedItem) GetFromUser() OptString {
	return s.FromUser
}

// GetAmount returns the value of Amount.
func (s *InfoResponseCoinHistoryReceivedItem) GetAmount() OptInt {
	return s.Amount
}

// SetFromUser sets the value of FromUser.
func (s *InfoResponseCoinHistoryReceivedItem) SetFromUser(val OptString) {
	s.FromUser = val
}

// SetAmount sets the value of Amount.
func (s *InfoResponseCoinHistoryReceivedItem) SetAmount(val OptInt) {
	s.Amount = val
}

type InfoResponseCoinHistorySentItem struct {
	// Имя пользователя, которому отправлены монеты.
	ToUser OptString `json:"toUser"`
	// Количество отправленных монет.
	Amount OptInt `json:"amount"`
}

// GetToUser returns the value of ToUser.
func (s *InfoResponseCoinHistorySentItem) GetToUser() OptString {
	return s.ToUser
}

// GetAmount returns the value of Amount.
func (s *InfoResponseCoinHistorySentItem) GetAmount() OptInt {
	return s.Amount
}

// SetToUser sets the value of ToUser.
func (s *InfoResponseCoinHistorySentItem) SetToUser(val OptString) {
	s.ToUser = val
}

// SetAmount sets the value of Amount.
func (s *InfoResponseCoinHistorySentItem) SetAmount(val OptInt) {
	s.Amount = val
}

type InfoResponseInventoryItem struct {
	// Тип предмета.
	Type OptString `json:"type"`
	// Количество предметов.
	Quantity OptInt `json:"quantity"`
}

// GetType returns the value of Type.
func (s *InfoResponseInventoryItem) GetType() OptString {
	return s.Type
}

// GetQuantity returns the value of Quantity.
func (s *InfoResponseInventoryItem) GetQuantity() OptInt {
	return s.Quantity
}

// SetType sets the value of Type.
func (s *InfoResponseInventoryItem) SetType(val OptString) {
	s.Type = val
}

// SetQuantity sets the value of Quantity.
func (s *InfoResponseInventoryItem) SetQuantity(val OptInt) {
	s.Quantity = val
}

// NewOptInfoResponseCoinHistory returns new OptInfoResponseCoinHistory with value set to v.
func NewOptInfoResponseCoinHistory(v InfoResponseCoinHistory) OptInfoResponseCoinHistory {
	return OptInfoResponseCoinHistory{
		Value: v,
		Set:   true,
	}
}

// OptInfoResponseCoinHistory is optional InfoResponseCoinHistory.
type OptInfoResponseCoinHistory struct {
	Value InfoResponseCoinHistory
	Set   bool
}

// IsSet returns true if OptInfoResponseCoinHistory was set.
func (o OptInfoResponseCoinHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInfoResponseCoinHistory) Reset() {
	var v InfoResponseCoinHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInfoResponseCoinHistory) SetTo(v InfoResponseCoinHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInfoResponseCoinHistory) Get() (v InfoResponseCoinHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInfoResponseCoinHistory) Or(d InfoResponseCoinHistory) InfoResponseCoinHistory {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/SendCoinRequest
type SendCoinRequest struct {
	// Имя пользователя, которому нужно отправить монеты.
	ToUser string `json:"toUser"`
	// Количество монет, которые необходимо отправить.
	Amount int `json:"amount"`
}

// GetToUser returns the value of ToUser.
func (s *SendCoinRequest) GetToUser() string {
	return s.ToUser
}

// GetAmount returns the value of Amount.
func (s *SendCoinRequest) GetAmount() int {
	return s.Amount
}

// SetToUser sets the value of ToUser.
func (s *SendCoinRequest) SetToUser(val string) {
	s.ToUser = val
}

// SetAmount sets the value of Amount.
func (s *SendCoinRequest) SetAmount(val int) {
	s.Amount = val
}
